{"ast":null,"code":"var _jsxFileName = \"/home/hobsonbreno/react-typescript-login-example/src/components/login.component.tsx\";\nimport { Component } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  validationSchema() {\n    return Yup.object().shape({\n      username: Yup.string().required(\"This field is required!\"),\n      password: Yup.string().required(\"This field is required!\")\n    });\n  }\n\n  handleLogin(formValue) {\n    const {\n      username,\n      password\n    } = formValue;\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n    AuthService.login(username, password).then(() => {\n      this.props.history.push(\"/profile\");\n      window.location.reload();\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      this.setState({\n        loading: false,\n        message: resMessage\n      });\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      message\n    } = this.state;\n    const initialValues = {\n      username: \"\",\n      password: \"\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n          alt: \"profile-img\",\n          className: \"profile-img-card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          validationSchema: this.validationSchema,\n          onSubmit: this.handleLogin,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"username\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"username\",\n                type: \"text\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"username\",\n                component: \"div\",\n                className: \"alert alert-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"password\",\n                type: \"password\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                component: \"div\",\n                className: \"alert alert-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary btn-block\",\n                disabled: loading,\n                children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"spinner-border spinner-border-sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-danger\",\n                role: \"alert\",\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/hobsonbreno/react-typescript-login-example/src/components/login.component.tsx"],"names":["Component","Formik","Field","Form","ErrorMessage","Yup","AuthService","Login","constructor","props","handleLogin","bind","state","username","password","loading","message","validationSchema","object","shape","string","required","formValue","setState","login","then","history","push","window","location","reload","error","resMessage","response","data","toString","render","initialValues"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport AuthService from \"../services/auth.service\";\n\ninterface RouterProps {\n  history: string;\n}\n\ntype Props = RouteComponentProps<RouterProps>;\n\ntype State = {\n  username: string,\n  password: string,\n  loading: boolean,\n  message: string\n};\n\nexport default class Login extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  validationSchema() {\n    return Yup.object().shape({\n      username: Yup.string().required(\"This field is required!\"),\n      password: Yup.string().required(\"This field is required!\"),\n    });\n  }\n\n  handleLogin(formValue: { username: string; password: string }) {\n    const { username, password } = formValue;\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n\n    AuthService.login(username, password).then(\n      () => {\n        this.props.history.push(\"/profile\");\n        window.location.reload();\n      },\n      error => {\n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        this.setState({\n          loading: false,\n          message: resMessage\n        });\n      }\n    );\n  }\n\n  render() {\n    const { loading, message } = this.state;\n\n    const initialValues = {\n      username: \"\",\n      password: \"\",\n    };\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Formik\n            initialValues={initialValues}\n            validationSchema={this.validationSchema}\n            onSubmit={this.handleLogin}\n          >\n            <Form>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Field name=\"username\" type=\"text\" className=\"form-control\" />\n                <ErrorMessage\n                  name=\"username\"\n                  component=\"div\"\n                  className=\"alert alert-danger\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Field name=\"password\" type=\"password\" className=\"form-control\" />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className=\"alert alert-danger\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={loading}>\n                  {loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )}\n                  <span>Login</span>\n                </button>\n              </div>\n\n              {message && (\n                <div className=\"form-group\">\n                  <div className=\"alert alert-danger\" role=\"alert\">\n                    {message}\n                  </div>\n                </div>\n              )}\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}